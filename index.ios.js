import React, { Component } from 'react'
import { AppRegistry, StyleSheet, Text, View } from 'react-native'
import { createStore } from 'redux'
import { Provider, connect } from 'react-redux'

/**
 * Presentational component
 */
function Counter(props) {
  return (
    <View style={styles.container}>
      <Text style={styles.welcome}>
        Counter: {props.counter}
      </Text>
      <Text style={styles.instructions} onPress={props.onIncrement}>
        Increment
      </Text>
      <Text style={styles.instructions} onPress={props.onDecrement}>
        Decrement
      </Text>
    </View>
  )
}

/**
 * Container component, generated by `connect`
 */
const CounterContainer = connect(
  function mapStateToProps(state) {
    return state
  },
  function mapDispatchToProps(dispatch) {
    return {
      onIncrement() {
        dispatch({ type: 'INCREMENT' })
      },
      onDecrement() {
        dispatch({ type: 'DECREMENT' })
      },
    }
  })(Counter)

/**
 * Reducer
 */
function reducer(state, action) {
  switch (action.type) {
    case 'INCREMENT':
      return { counter: state.counter + 1 }
    case 'DECREMENT':
      return { counter: state.counter - 1 }
    default:
      return state
  }
}

/**
 * Store, with initial state
 */
const store = createStore(reducer, { counter: 1 })

/**
 * App component, the root component registered to AppRegistry
 */
function App() {
  return (
    <Provider store={store}>
      <CounterContainer />
    </Provider>
  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
})

AppRegistry.registerComponent('ReactNativeCounter', () => App)
